{"version":3,"sources":["components/auth/SignIn.js","store/actions/authAction.js","components/auth/SignUp.js","components/projects/ProjectSummary.js","components/projects/ProjectsList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/CreateProject.js","store/actions/projectAction.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","signIn","this","authError","auth","uid","to","className","onSubmit","htmlFor","type","onChange","Component","connect","firebase","dispatch","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","then","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","console","log","collection","doc","user","set","initials","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectsList","projects","map","key","Notifications","notifications","item","content","time","fromNow","Dashboard","compose","ordered","firestoreConnect","orderBy","limit","signOut","onClick","profile","SignOutLinks","links","CreateProject","createProject","history","push","authorId","add","Date","ownProps","match","params","data","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7ed8a4d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authAction'\nimport {Redirect} from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email:'',\n        password:''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError,auth} = this.props;\n        if (auth.uid) return <Redirect to='/'/>\n\n        return (\n            <div className='container'>\n             <form onSubmit={this.handleSubmit} className='white'>\n              <h5 className='grey-text text-darken-3'>Sign In</h5>\n              <div className='input-field'>\n               <label htmlFor='email'>Email</label>\n               <input type='email' id='email' onChange={this.handleChange}/>    \n              </div>\n              <div className='input-field'>\n               <label htmlFor='password'>Password</label>\n               <input type='password' id='password' onChange={this.handleChange}/>    \n              </div>    \n              <div className='input-field'>\n                  <button className='btn pink lighten-1 z-depth-0'>Login</button>\n                  <div className='red-text center'>\n                      { authError ? <p>{authError}</p> : null} \n                  </div>\n              </div>               \n             </form>   \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","\nexport const signIn = (credentials) => {\n    return (dispatch,getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) =>{\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            console.log(newUser)\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() =>{\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}\n\n\n\n\n\n\n ","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signUp} from '../../store/actions/authAction'\n\nclass SignUp extends Component {\n    state = {\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log(this.state)\n        this.props.signUp(this.state)\n    }\n    render() {\n        const {auth, authError} = this.props;\n        if (auth.uid) return <Redirect to='/'/>\n        return (\n            <div className='container'>\n             <form onSubmit={this.handleSubmit} className='white'>\n              <h5 className='grey-text text-darken-3'>Sign Up</h5>\n              <div className='input-field'>\n               <label htmlFor='email'>Email</label>\n               <input type='email' id='email' onChange={this.handleChange}/>    \n              </div>\n              <div className='input-field'>\n               <label htmlFor='password'>Password</label>\n               <input type='password' id='password' onChange={this.handleChange}/>    \n              </div>\n              <div className='input-field'>\n               <label htmlFor='firstName'>First Name</label>\n               <input type='text' id='firstName' onChange={this.handleChange}/>    \n              </div>    \n              <div className='input-field'>\n               <label htmlFor='lastName'>Last Name</label>\n               <input type='text' id='lastName' onChange={this.handleChange}/>    \n              </div>    \n              <div className='input-field'>\n                  <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\n                  <div className='red-text center'>\n                    {authError ? <p>{authError}</p> : null}\n                  </div>\n              </div>               \n             </form>   \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\n","import React from 'react'\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n    return(\n       \n       <div className='card z-depth-0 project-summary'>\n            <div className='card-content grey-text text-darken-3'>\n              <span className='card-title'>{project.title}</span>\n              <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n              <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n            </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectsList = ({projects}) => {\n    return(\n        <div className='project-list section'>\n            {projects && projects.map(project =>{\n                return(\n                <Link to={'/project/' + project.id} key={project.id}>\n                 <ProjectSummary project={project}  />\n                </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectsList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n    return(\n        <div className='section'>\n           <div className='card z-depth-0'>\n             <div className='card-content'>\n              <span className='card-title'>Notifications</span>\n              <ul className='notifications'>\n               {notifications && notifications.map(item => {\n                 return (\n                   <li key={item.id}>\n                     <span className='pink-text'>{item.user} </span>\n                     <span>{item.content}</span>\n                     <div className='grey-text note-date'>\n                       {moment(item.time.toDate()).fromNow()}\n                     </div>\n                   </li>\n                 )\n               })}\n              </ul>\n             </div>   \n           </div>\n        </div>\n    )\n}\nexport default Notifications","import React, {Component} from 'react' \nimport ProjectsList from '../projects/ProjectsList'\nimport Notifications from './Notifications'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component{\n    render(){\n      const {projects,auth, notifications} = this.props\n      if (!auth.uid) return <Redirect to='/signin'/>\n        return(\n            <div className='dashboard container'>\n              <div className='row'>\n                <div className='col s12 m6'>\n                 <ProjectsList projects={projects}/>\n                </div>\n                <div className='col s12 m5 offset-m1'>\n                <Notifications notifications={notifications}/>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n  console.log(state)\nreturn{\n  projects: state.firestore.ordered.projects,\n  auth: state.firebase.auth,\n  notifications: state.firestore.ordered.notifications\n}\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\n    {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authAction'\n\n\nconst SignInLinks = (props) => {\n    return(\n        <ul className='right'>\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n        \n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    } \n}\n \nexport default connect(null,mapDispatchToProps)(SignInLinks)\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\n\nconst SignOutLinks = () => {\n    return(\n        <ul className='right'>\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n        \n    )\n}\n\nexport default SignOutLinks\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignInLinks from './SignedInLinks'\nimport SignOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n  const {auth,profile} = props\n  // console.log(auth)\n  const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks/>\n    return(\n        <nav className='nav-wrapper grey darken-3'>\n          <div className='container'>\n            <Link to='/' className='brand-logo'>MarioPlan</Link>\n            {/* <SignInLinks/>\n            <SignOutLinks/> */}\n            {links}\n          </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n  console.log(state)\n  return{\n     auth: state.firebase.auth,\n     profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n\n\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { createProject } from '../../store/actions/projectAction'\nimport {Redirect} from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title:'',\n        content:''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log(this.state)\n        // const project = {\n        //     title:this.state.title,\n        //     content:this.state.content,\n        //     projectManager: 'Emir Özünal',\n        //     createdAt:new Date(),\n        // }\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n        \n    }\n    render() {\n        const {auth} = this.props;\n        if (!auth.uid) return <Redirect to='/signin'/>\n\n        return (\n            <div className='container'>\n             <form onSubmit={this.handleSubmit} className='white'>\n              <h5 className='grey-text text-darken-3'>Create New Project</h5>\n              <div className='input-field'>\n               <label htmlFor='title'>Title</label>\n               <input type='text' id='title' onChange={this.handleChange}/>    \n              </div>\n              <div className='input-field'>\n               <label htmlFor='content'>Project Content</label>\n               <textarea id='content' className='materialize-textarea' onChange={this.handleChange}></textarea>\n              </div>    \n              <div className='input-field'>\n                  <button className='btn pink lighten-1 z-depth-0'>Create</button>\n              </div>               \n             </form>   \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return(dispatch, getState, {getFirebase,getFirestore}) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n\n        }).then (() => {\n            dispatch({type:'CREATE_PROJECT', project});\n        }).catch((err) =>{\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\n        }) \n       \n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\n\nconst ProjectDetails = (props) => {\n    // const id = props.match.params.id;\n    const {project,auth} = props\n    if (!auth.uid) return <Redirect to='/signin'/>\n\n    if (project) {\n        return (\n            <div className='container section project-details'>\n            <div className='card z-depth-0'>\n            <div className='card-content'>\n            <span className='card-title'>{project.title}</span>\n            <p>{project.content}</p>\n            </div>\n            <div className='card-action grey lighten-4 grey-text'>\n                <div>Posted by {project.authorFirstName}{project.authorLastName}</div>\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n            </div>\n        </div>\n        )\n    } else {\n        return (\n         <div className='container center'>\n            <o>Loading project...</o>\n         </div>\n            )\n    }\n    \n}\n\nconst mapStateToProps = (state,ownProps) => {\n    // console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails)\n","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport CreateProject from './components/projects/CreateProject';\nimport ProjectDetails from './components/projects/ProjectDetails';\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n         <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn}/> \n          <Route path='/signup' component={SignUp}/>\n          <Route path='/create' component={CreateProject}/>\n         </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState , action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error'); \n            // state.authErorr=true\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            // state.authErorr=false\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n            \n            default:\n            return state;\n    }\n\n}\n\nexport default authReducer","const initState = {\n    projects:[\n          {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n          {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n          {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n        ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      // alert('kayıt alındı')\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return state;\n      default:\n        return state;\n  }\n\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootReducers = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n    \n});\n\nexport default rootReducers ","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBQbaY0gHhPmvsO7uwJwXTCRqEIAl2yhg8\",\n  authDomain: \"net-ninja-marioplan-7ee32.firebaseapp.com\",\n  databaseURL: \"https://net-ninja-marioplan-7ee32.firebaseio.com\",\n  projectId: \"net-ninja-marioplan-7ee32\",\n  storageBucket: \"net-ninja-marioplan-7ee32.appspot.com\",\n  messagingSenderId: \"1009100792468\",\n  appId: \"1:1009100792468:web:dcd38f9ca30d87a8ed8a81\",\n  measurementId: \"G-D71T2S5ES4\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n// firebase.analytics();\n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, createStore, compose} from 'redux'\nimport rootReducers from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore,getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase,getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducers,\n compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase,getFirestore })),\n  reduxFirestore(fbConfig),\n  reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady: true})\n  )\n  );\n\n  store.firebaseAuthIsReady.then(() =>{\n    ReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n  })\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}